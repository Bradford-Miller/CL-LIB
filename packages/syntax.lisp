(in-package CL-LIB)(cl-lib:version-reporter "CL-LIB-Syntax" 5 0 ";; Time-stamp: <2008-05-03 13:20:20 gorbag>"                          "CVS: $Id: syntax.lisp,v 1.2 2008/05/03 17:42:03 gorbag Exp $restructured version");; This portion of CL-LIB Copyright (C) 1985-2008 by Bradford W. Miller and the Trustees of the University of Rochester;; ;; This library is free software; you can redistribute it and/or modify it under the terms of the GNU ;; Lesser General Public License as published by the Free Software Foundation; either version 3.0 of ;; the License, or (at your option) any later version.;; This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; ;; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. ;; See the GNU Lesser General Public License for more details.;; You should have received a copy of the GNU Lesser General Public License along with this library; ;; if not, see <http://www.gnu.org/licenses/>.(defvar *syntax-alist* nil "Alist of declared syntaxes (readtables) as name . readtable-name");; we quote the readtable-symbol so the readtable can change independantly of this database.(defun add-syntax (name readtable-symbol)  "Associate the name with the readtable-symbol, a quoted variable containing the readtable."  (update-alist name readtable-symbol *syntax-alist*))(defun set-syntax (syntax-name)  (let ((readtable-name (cdr (assoc syntax-name *syntax-alist*))))    (setq *readtable* (if readtable-name                          (symbol-value readtable-name)                        (copy-readtable nil))))) ; use the common-lisp readtable(defmacro with-syntax (syntax-name &body body)  `(let ((*readtable* *readtable*))      ; establish a binding     (set-syntax ,syntax-name)     ,@body))(pushnew :cl-lib-syntax *features*)