;; The timestamp functionality for FRED: patterned after a similar function in elisp.;;;; Author: Bradford W. Miller (bradford.w.miller@gmail.com);;   made part of CL-LIB  3/2/01 by bradford.w.miller@gmail.com ;;;;;; Copyright (c) 2001 by Bradford W. Miller;;; Right of use & redistribution is granted as per the terms of the ;;; GNU LIBRARY GENERAL PUBLIC LICENCE version 2 which is incorporated here by;;; reference. ;;;;;; Bug reports, improvements, and feature requests should be sent;;; to bradford.w.miller@gmail.com;;;;;; This program is distributed in the hope that it will be useful,;;; but WITHOUT ANY WARRANTY; without even the implied warranty of;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the;;; Gnu Library General Public License for more details.;;;;;; You should have received a copy of the Gnu Library General Public License;;; along with this program; if not, write to the Free Software;;; Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.;;;;; Time-stamp: <2001-12-03 16:43:41 Bradford.W.Miller@motorola.com>                             ;; (in-package cl-user)(defparameter *timestamp-string* ";; Time-stamp: ")(defparameter *update-timestamp-on-save* t)(defparameter *timestamp-default-who* "bradford.w.miller@gmail.com")(export '(*timestamp-string* *update-timestamp-on-save* *timestamp-default-who*))(defun default-mark ()   (fred-buffer (front-fred-item)))(defun buffer-timestamp (&optional (mark (default-mark)) (who *timestamp-default-who*))  (unless who    (setq who ""))  (cl-lib:mlet (second minute hour day month year) (get-decoded-time)      (buffer-insert-substring mark                             (format nil "~A<~d-~2,'0d-~2,'0d ~2,'0D:~2,'0D:~2,'0D ~A>" *timestamp-string* year month day hour minute second who))))(defun find-timestamp (&optional (old-mark (default-mark)))  (buffer-string-pos (make-mark old-mark 0) *timestamp-string*))(defun replace-timestamp (timestamp-posn &optional (old-mark (default-mark)))  (let* ((delete-mark (make-mark old-mark timestamp-posn))         (delete-end (1+ (buffer-string-pos delete-mark ">"))))    (buffer-delete delete-mark timestamp-posn delete-end)    (buffer-timestamp delete-mark)    old-mark))(defun find-and-replace-timestamp (&optional (old-mark (default-mark)))  (cl-lib:let*-non-null ((timestamp-posn (find-timestamp old-mark))                         )      (replace-timestamp timestamp-posn old-mark)));; link them up.(defun buffer-timestamp-i (&rest ignore)  (declare (ignore ignore))  (buffer-timestamp))(def-fred-command (:control #\T) buffer-timestamp-i "Put a timestamp into the buffer at point. See variables *timestamp-string* and *timestamp-default-who*")(advise buffer-write-file (when *update-timestamp-on-save*                            (find-and-replace-timestamp (car arglist)))        :when :before :name :Timestamp)