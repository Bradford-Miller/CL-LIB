                                                             collect-append    FUNCTIONCOLLECT-APPEND SEQUENCES                                         [Function]COLLECT-APPEND TYPE SEQUENCES                                    [Function]    Package    series    DESCRIPTIONGiven a series of sequences, COLLECT-APPEND returns a new sequence byconcatenating these sequences together in order.  The TYPE is a typespecifier indicating the type of sequence created and must be a propersubtype of SEQUENCE.  If TYPE is omitted, it defaults to LIST.  (Thisfunction exhibits an argument pattern that is unusual for Common Lisp:  an``optional'' argument preceding a required argument.  This pattern cannotbe expressed in the usual manner with &OPTIONAL.  It is indicated above bytwo definition lines, showing the two possible argument patterns.)It must be possible for every element of every sequence in the input seriesto be an element of a sequence of type TYPE.  The result does not share anystructure with the sequences in the input.(COLLECT-APPEND #Z((A B) NIL (C D))) => (A B C D) (COLLECT-APPEND 'STRING #Z("A " "BIG " "CAT")) => "A BIG CAT"     SEE ALSO     about-series     about-generators;Copyright 1989 by the Massachusetts Institute of Technology,;Cambridge, Massachusetts.;Permission to use, copy, modify, and distribute this software and its;documentation for any purpose and without fee is hereby granted,;provided that this copyright and permission notice appear in all;copies and supporting documentation, and that the name of M.I.T. not;be used in advertising or publicity pertaining to distribution of the;software without specific, written prior permission. M.I.T. makes no;representations about the suitability of this software for any;purpose.  It is provided "as is" without express or implied warranty.;    M.I.T. DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING;    ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL;    M.I.T. BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR;    ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,;    WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,;    ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS;    SOFTWARE.