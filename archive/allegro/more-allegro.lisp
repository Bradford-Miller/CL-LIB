(in-package cl-lib);; Time-stamp: <96/01/12 15:58:07 miller>;; raw io(defun raw-read-char (&optional (stream *standard-input*) &rest args)  ;; copied from the example on page 14-87 of the allegro 4.1 manual.  ;; raw-reading is in response to our earlier enhancement request for the FI interface.  (excl:set-terminal-characteristics stream :input-processing :cbreak)  (sleep 1)                     ; a hack, the above call isn't synchronous.  (unwind-protect      (handler-case          (apply #'read-char stream args)        (error (c)          (format *terminal-io* "error doing read-char from ~s: ~a" stream c)))    (excl:set-terminal-characteristics stream :input-processing :cooked)))(defun raw-read-char-no-hang (&optional (stream *standard-input*) &rest args)  ;; copied from the example on page 14-87 of the allegro 4.1 manual.  ;; raw-reading is in response to our earlier enhancement request for the FI interface.  (excl:set-terminal-characteristics stream :input-processing :cbreak)  (sleep 1)                     ; a hack, the above call isn't synchronous.  (unwind-protect      (handler-case          (apply #'read-char-no-hang stream args)        (error (c)          (format *terminal-io* "error doing read-char-no-hang from ~s: ~a" stream c)))    (excl:set-terminal-characteristics stream :input-processing :cooked)))(defun raw-peek-char (&optional peek-type (stream *standard-input*) &rest args)  ;; adapted from the example on page 14-87 of the allegro 4.1 manual.  ;; raw-reading is in response to our earlier enhancement request for the FI interface.  (excl:set-terminal-characteristics stream :input-processing :cbreak)  (sleep 1)                     ; a hack, the above call isn't synchronous.  (unwind-protect      (handler-case          (apply #'peek-char peek-type stream args)        (error (c)          (format *terminal-io* "error doing peek-char from ~s: ~a" stream c)))    (excl:set-terminal-characteristics stream :input-processing :cooked)));; install the series stuff(add-initialization "Install Waters Series"                    '(let ((*package* (find-package 'cl-lib)))                      (series::install))                    '(:once :now))